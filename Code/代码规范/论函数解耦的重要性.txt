Auther:luoyefeisong
Time:2016-03-02 
				
				论函数解耦的重要性
			
鉴于最近某些个同学写的代码简直不能看，故此写此篇文来说明函数解耦的重要性
			
1.易于维护
	若是代码耦合性高，修改起来就非常困难。往往只能大篇幅地修改乃至于整个代码结构都要改。
	
2.易于读写
	若是代码耦合性高，代码量一旦大了起来，很容易搞不懂自己前面写了什么。
	
3.易于思考
	耦合性低的代码，各种功能模块很清楚，我们需要的就是排列组合。反之，如果耦合性高，代码凌乱，易出错也难发现自己错了。

4.可复用
	这个很重要，也是最重要的一点。可复用不是单纯地说，下次有一样的我可以拿来抄。而是每次你写了一个功能，你脑子里就存了一个类似的
	感觉，等到你功能越写越多，你对各种功能元素的感觉就会越来越熟悉和敏感。这样不知不觉就会越来越强大，类似的东西你就能很快上手。
	如果说前面三个是为了效率，那么这一点才是你真正要积累的东西。

总结：耦合性低的代码写起来速度更快，效率更高，不容易出错而且出了错也很好找。没一个函数都想是存在自己的脑子里，随着代码的越写越多
自己脑子里的东西也越来越多，类似的代码根本不用太多思考便能顺手拈来。为了追求速度就更应该写耦合性低的代码，只是刚开始不适应，一段
时间以后带来的好处自不必言。

Marvin: 纠结了一上午，没找到理解可复用的明显思路，只是有了几个思考的方向：
	一是集中考虑需要实现的功能（想要做什么）：从目的开始，向前向后推出一条逻辑线。比如，XX想拷贝mp3，他的目的是希望物品能从A移动到B，那么就能产生如下的Quesion：从哪里考，拷贝到哪里？
	二是利用面对对象的思想，将函数看成对象，分析其成员和操作方法，以期望从中找到复用的本质；
	
luoyefeisong: 从你的回复来看，你完全没理解复用性是什么鬼。那就多学习下我的代码的写法，多去实践。接触多了自然就明白了。